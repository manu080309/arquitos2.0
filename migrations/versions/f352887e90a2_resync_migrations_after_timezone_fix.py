"""Resync migrations after timezone fix

Revision ID: f352887e90a2
Revises: 01aa8506af05
Create Date: 2025-10-22 04:27:53.541515

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f352887e90a2'
down_revision = '01aa8506af05'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('liquidaciones')
    op.drop_table('abonos')
    op.drop_table('clientes')
    op.drop_table('paquetes')
    op.drop_table('prestamos')
    op.drop_table('movimientos_caja')
    with op.batch_alter_table('prestamo', schema=None) as batch_op:
        batch_op.alter_column('saldo',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.drop_column('entregado')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('prestamo', schema=None) as batch_op:
        batch_op.add_column(sa.Column('entregado', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('saldo',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    op.create_table('movimientos_caja',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('movimientos_caja_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('categoria', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('monto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='movimientos_caja_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('prestamos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('monto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('descripcion', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('movimiento_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], name=op.f('prestamos_cliente_id_fkey')),
    sa.ForeignKeyConstraint(['movimiento_id'], ['movimientos_caja.id'], name=op.f('prestamos_movimiento_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('prestamos_pkey'))
    )
    op.create_table('paquetes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('valor', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('fecha', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('paquetes_pkey'))
    )
    op.create_table('clientes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clientes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('orden', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('direccion', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('monto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('plazo', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('interes', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('saldo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('fecha_creacion', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('ultimo_abono_fecha', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('cancelado', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('frecuencia', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='clientes_pkey'),
    sa.UniqueConstraint('codigo', name='clientes_codigo_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('abonos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('monto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('movimiento_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], name=op.f('abonos_cliente_id_fkey')),
    sa.ForeignKeyConstraint(['movimiento_id'], ['movimientos_caja.id'], name=op.f('abonos_movimiento_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('abonos_pkey'))
    )
    op.create_table('liquidaciones',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fecha', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('total_abonos', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_prestamos', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_caja', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_paquetes', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('entrada_efectivo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('salida_efectivo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gastos', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('saldo_previo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('liquidaciones_pkey')),
    sa.UniqueConstraint('fecha', name=op.f('liquidaciones_fecha_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
